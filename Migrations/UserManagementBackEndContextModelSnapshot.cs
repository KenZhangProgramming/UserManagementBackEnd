// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UserManagementBackEnd.Data;

namespace UserManagementBackEnd.Migrations
{
    [DbContext(typeof(UserManagementBackEndContext))]
    partial class UserManagementBackEndContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("UserManagementBackEnd.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderCount")
                        .HasColumnType("int");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int");

                    b.Property<int>("Zip")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProvinceId");

                    b.ToTable("Customer");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "1234 Anywhere St.",
                            Email = "Marcus.HighTower@acmecorp.com",
                            FirstName = "Marcus",
                            Gender = "Male",
                            LastName = "HighTower",
                            OrderCount = 0,
                            ProvinceId = 1,
                            Zip = 85229
                        },
                        new
                        {
                            Id = 2,
                            Address = "435 Main St.",
                            Email = "Jesse.Smith@gmail.com",
                            FirstName = "Jesse",
                            Gender = "Female",
                            LastName = "Smith",
                            OrderCount = 0,
                            ProvinceId = 2,
                            Zip = 85230
                        },
                        new
                        {
                            Id = 3,
                            Address = "1 Atomic St.",
                            Email = "Albert.Einstein@outlook.com",
                            FirstName = "Albert",
                            Gender = "Male",
                            LastName = "Einstein",
                            OrderCount = 0,
                            ProvinceId = 3,
                            Zip = 85231
                        },
                        new
                        {
                            Id = 4,
                            Address = "85 Cedar Dr.",
                            Email = "Dan.Wahlin@yahoo.com",
                            FirstName = "Dan",
                            Gender = "Male",
                            LastName = "Wahlin",
                            OrderCount = 0,
                            ProvinceId = 4,
                            Zip = 85232
                        },
                        new
                        {
                            Id = 5,
                            Address = "12 Ocean View St.",
                            Email = "Ward.Bell@gmail.com",
                            FirstName = "Ward",
                            Gender = "Male",
                            LastName = "Bell",
                            OrderCount = 0,
                            ProvinceId = 5,
                            Zip = 85233
                        },
                        new
                        {
                            Id = 6,
                            Address = "1600 Amphitheatre Parkway",
                            Email = "Brad.Green@gmail.com",
                            FirstName = "Brad",
                            Gender = "Male",
                            LastName = "Green",
                            OrderCount = 0,
                            ProvinceId = 6,
                            Zip = 85234
                        },
                        new
                        {
                            Id = 7,
                            Address = "1604 Amphitheatre Parkway",
                            Email = "Igor.Minar@gmail.com",
                            FirstName = "Igor",
                            Gender = "Male",
                            LastName = "Minar",
                            OrderCount = 0,
                            ProvinceId = 7,
                            Zip = 85235
                        },
                        new
                        {
                            Id = 8,
                            Address = "1607 Amphitheatre Parkway",
                            Email = "Miško.Hevery@gmail.com",
                            FirstName = "Miško",
                            Gender = "Male",
                            LastName = "Hevery",
                            OrderCount = 0,
                            ProvinceId = 8,
                            Zip = 85236
                        },
                        new
                        {
                            Id = 9,
                            Address = "346 Cedar Ave.",
                            Email = "Michelle.Avery@acmecorp.com",
                            FirstName = "Michelle",
                            Gender = "Female",
                            LastName = "Avery",
                            OrderCount = 0,
                            ProvinceId = 9,
                            Zip = 85237
                        },
                        new
                        {
                            Id = 10,
                            Address = "4576 Main St.",
                            Email = "Heedy.Wahlin@hotmail.com",
                            FirstName = "Heedy",
                            Gender = "Female",
                            LastName = "Wahlin",
                            OrderCount = 0,
                            ProvinceId = 10,
                            Zip = 85238
                        },
                        new
                        {
                            Id = 11,
                            Address = "964 Point St.",
                            Email = "Thomas.Martin@outlook.com",
                            FirstName = "Thomas",
                            Gender = "Male",
                            LastName = "Martin",
                            OrderCount = 0,
                            ProvinceId = 11,
                            Zip = 85239
                        },
                        new
                        {
                            Id = 12,
                            Address = "98756 Center St.",
                            Email = "Jean.Martin@outlook.com",
                            FirstName = "Jean",
                            Gender = "Female",
                            LastName = "Martin",
                            OrderCount = 0,
                            ProvinceId = 12,
                            Zip = 85240
                        });
                });

            modelBuilder.Entity("UserManagementBackEnd.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Product")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Order");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 1,
                            Price = 29.99m,
                            Product = "Basket",
                            Quantity = 1
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 2,
                            Price = 9.99m,
                            Product = "Yarn",
                            Quantity = 1
                        },
                        new
                        {
                            Id = 3,
                            CustomerId = 3,
                            Price = 5.99m,
                            Product = "Needes",
                            Quantity = 1
                        },
                        new
                        {
                            Id = 4,
                            CustomerId = 4,
                            Price = 499.99m,
                            Product = "Speakers",
                            Quantity = 1
                        },
                        new
                        {
                            Id = 5,
                            CustomerId = 5,
                            Price = 399.99m,
                            Product = "iPod",
                            Quantity = 1
                        },
                        new
                        {
                            Id = 6,
                            CustomerId = 6,
                            Price = 329.99m,
                            Product = "Table",
                            Quantity = 1
                        },
                        new
                        {
                            Id = 7,
                            CustomerId = 7,
                            Price = 129.99m,
                            Product = "Chair",
                            Quantity = 4
                        },
                        new
                        {
                            Id = 8,
                            CustomerId = 8,
                            Price = 89.99m,
                            Product = "Lamp",
                            Quantity = 5
                        },
                        new
                        {
                            Id = 9,
                            CustomerId = 9,
                            Price = 59.99m,
                            Product = "Call of Duty",
                            Quantity = 1
                        },
                        new
                        {
                            Id = 10,
                            CustomerId = 10,
                            Price = 49.99m,
                            Product = "Controller",
                            Quantity = 1
                        },
                        new
                        {
                            Id = 11,
                            CustomerId = 11,
                            Price = 49.99m,
                            Product = "Gears of War",
                            Quantity = 1
                        },
                        new
                        {
                            Id = 12,
                            CustomerId = 12,
                            Price = 49.99m,
                            Product = "Lego City",
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("UserManagementBackEnd.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Quantity")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Daily Item",
                            CustomerId = 1,
                            Name = "Basket",
                            Quantity = "2lb"
                        },
                        new
                        {
                            Id = 2,
                            Category = "Daily Item",
                            CustomerId = 1,
                            Name = "Yarn",
                            Quantity = "2lb"
                        },
                        new
                        {
                            Id = 3,
                            Category = "Daily Item",
                            CustomerId = 1,
                            Name = "Needles",
                            Quantity = "1lb"
                        },
                        new
                        {
                            Id = 4,
                            Category = "Meat",
                            CustomerId = 1,
                            Name = "Perch Meat",
                            Quantity = "3lb"
                        },
                        new
                        {
                            Id = 5,
                            Category = "Meat",
                            CustomerId = 1,
                            Name = "Bass Meat",
                            Quantity = "5lb"
                        },
                        new
                        {
                            Id = 6,
                            Category = "Meat",
                            CustomerId = 1,
                            Name = "Walleye Meat",
                            Quantity = "1lb"
                        },
                        new
                        {
                            Id = 7,
                            Category = "Meat",
                            CustomerId = 7,
                            Name = "Goose Meat",
                            Quantity = "6lb"
                        },
                        new
                        {
                            Id = 8,
                            Category = "Meat",
                            CustomerId = 8,
                            Name = "Deer Meat",
                            Quantity = "7lb"
                        },
                        new
                        {
                            Id = 9,
                            Category = "Meat",
                            CustomerId = 9,
                            Name = "Moose Meat",
                            Quantity = "8lb"
                        },
                        new
                        {
                            Id = 10,
                            Category = "Meat",
                            CustomerId = 10,
                            Name = "Chicken Meat",
                            Quantity = "4lb"
                        },
                        new
                        {
                            Id = 11,
                            Category = "Vegetable",
                            CustomerId = 11,
                            Name = "Cabbage",
                            Quantity = "1lb"
                        },
                        new
                        {
                            Id = 12,
                            Category = "Fruit",
                            CustomerId = 12,
                            Name = "Apple",
                            Quantity = "1lb"
                        });
                });

            modelBuilder.Entity("UserManagementBackEnd.Models.Province", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abbreviation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Province");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Abbreviation = "BC",
                            Name = "British Columbia"
                        },
                        new
                        {
                            Id = 2,
                            Abbreviation = "ON",
                            Name = "Ontario"
                        },
                        new
                        {
                            Id = 3,
                            Abbreviation = "QC",
                            Name = "Quebec"
                        },
                        new
                        {
                            Id = 4,
                            Abbreviation = "AB",
                            Name = "Alberta"
                        },
                        new
                        {
                            Id = 5,
                            Abbreviation = "MB",
                            Name = "Manitoba"
                        },
                        new
                        {
                            Id = 6,
                            Abbreviation = "YT",
                            Name = "Yukon"
                        },
                        new
                        {
                            Id = 7,
                            Abbreviation = "NT",
                            Name = "Northwest Territories"
                        },
                        new
                        {
                            Id = 8,
                            Abbreviation = "NB",
                            Name = "New Brunswick"
                        },
                        new
                        {
                            Id = 9,
                            Abbreviation = "NU",
                            Name = "Nunavut"
                        },
                        new
                        {
                            Id = 10,
                            Abbreviation = "NJ",
                            Name = "Newfoundland and Labrador"
                        },
                        new
                        {
                            Id = 11,
                            Abbreviation = "NS",
                            Name = "Nova Scotia"
                        },
                        new
                        {
                            Id = 12,
                            Abbreviation = "PE",
                            Name = "Prince Edward Island"
                        });
                });

            modelBuilder.Entity("UserManagementBackEnd.Models.Customer", b =>
                {
                    b.HasOne("UserManagementBackEnd.Models.Province", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UserManagementBackEnd.Models.Order", b =>
                {
                    b.HasOne("UserManagementBackEnd.Models.Customer", "customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UserManagementBackEnd.Models.Product", b =>
                {
                    b.HasOne("UserManagementBackEnd.Models.Customer", "Customer")
                        .WithMany("Products")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
